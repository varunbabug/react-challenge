{"version":3,"sources":["Utilities/getRandomInt.jsx","Components/renderUniquePixels.jsx","Utilities/rangeofNumbers.jsx","App.js","reportWebVitals.js","index.js"],"names":["getRandomInt","min","max","Math","ceil","floor","random","RenderUniquePixels","rangeOfNumbers","imageHeight","imageWidth","red","blue","green","rangeOfPixels","_","range","className","style","height","width","map","element","backgroundColor","float","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAO,SAASA,EAAaC,EAAKC,GAI9B,OAHAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GAEVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,GAAKA,G,WCiCzCM,EAjCY,SAAC,GAA+B,ICFrCC,EDEOC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,WAClCC,EAAM,EACNC,EAAO,EACPC,EAAQ,EAENC,GCPYN,EDOUC,EAAcC,ECNnCK,IAAEC,MAAMR,IDQf,OACI,qBACAS,UAAU,YACVC,MAAO,CAAEC,OAAO,GAAD,OAAKV,EAAL,MAAsBW,MAAM,GAAD,OAAKV,EAAL,OAF1C,SAICI,EAAcO,KAAI,SAACC,GAKhB,OAJAX,EAAMX,EAAa,EAAG,KACtBa,EAAQb,EAAa,EAAG,KACxBY,EAAOZ,EAAa,EAAG,KAGvB,qBAEIkB,MAAO,CACPK,gBAAgB,OAAD,OAASZ,EAAT,aAAiBE,EAAjB,aAA2BD,EAA3B,KACfO,OAAQ,MACRC,MAAO,MACPI,MAAO,UALFF,SEZNG,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,CAAoBP,WAAY,IAAKD,YAAa,SCMzCiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.63e0d4cc.chunk.js","sourcesContent":["export function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    \r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}","import React from 'react';\r\nimport { range } from './../Utilities/rangeofNumbers';\r\nimport { getRandomInt } from './../Utilities/getRandomInt';\r\n\r\nconst RenderUniquePixels = ({imageHeight, imageWidth}) => {\r\n    let red = 0;\r\n    let blue = 0;\r\n    let green = 0; \r\n\r\n    const rangeOfPixels = range(imageHeight * imageWidth);\r\n\r\n    return ( \r\n        <div\r\n        className=\"card-body\"\r\n        style={{ height: `${imageHeight}px`, width: `${imageWidth}px` }}\r\n        >\r\n        {rangeOfPixels.map((element) => {\r\n            red = getRandomInt(0, 256);\r\n            green = getRandomInt(0, 256);\r\n            blue = getRandomInt(0, 256);\r\n\r\n            return (\r\n            <div\r\n                key={element}\r\n                style={{\r\n                backgroundColor: `rgb(${red}, ${green}, ${blue})`,\r\n                height: \"1px\",\r\n                width: \"1px\",\r\n                float: \"right\",\r\n                }}\r\n            />\r\n            );\r\n        })}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default RenderUniquePixels;","import _ from 'lodash'\r\n\r\nexport function range(rangeOfNumbers) {\r\n    return _.range(rangeOfNumbers);\r\n}","import './App.css';\nimport RenderUniquePixels from './Components/renderUniquePixels';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RenderUniquePixels imageWidth={256} imageHeight={128} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}