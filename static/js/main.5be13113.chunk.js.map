{"version":3,"sources":["Components/renderUniquePixels.jsx","Utilities/uniqueCombinations.jsx","App.js","reportWebVitals.js","index.js"],"names":["RenderUniquePixels","imageHeight","imageWidth","rebCombinations","height","width","rgbUniqueCombination","blue","green","red","push","uniqueCombinations","className","style","map","color","backgroundColor","float","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KA2BeA,EAxBY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAEnCC,ECLD,SAA4BC,EAAQC,GAGvC,IAFA,IAAIC,EAAuB,GAElBC,EAAO,EAAGA,GAAQ,IAAKA,GAAQ,EACtC,IAAK,IAAIC,EAAQ,EAAGA,GAAS,IAAKA,GAAS,EACzC,IAAK,IAAIC,EAAM,EAAGA,GAAO,IAAMA,GAAO,EACpCH,EAAqBI,KAAK,CAACD,EAAKD,EAAOD,IAK7C,OAAOD,EDNeK,GAExB,OACE,qBACEC,UAAU,YACVC,MAAO,CAAET,OAAO,GAAD,OAAKH,EAAL,MAAsBI,MAAM,GAAD,OAAKH,EAAL,OAF5C,SAIGC,EAAgBW,KAAI,SAAAC,GAAK,OACxB,qBAEEF,MAAO,CACLG,gBAAgB,QAAD,OAAUD,EAAM,GAAhB,aAAuBA,EAAM,GAA7B,aAAoCA,EAAM,GAA1C,KACfX,OAAQ,MACRC,MAAO,MACPY,MAAO,UALJF,SEHAG,MARf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,CAAoBV,WAAY,IAAKD,YAAa,SCMzCkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5be13113.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { uniqueCombinations } from \"../Utilities/uniqueCombinations\";\r\n\r\nconst RenderUniquePixels = ({ imageHeight, imageWidth }) => {\r\n\r\n  const rebCombinations = uniqueCombinations(imageHeight, imageWidth);\r\n  \r\n  return (\r\n    <div\r\n      className=\"card-body\"\r\n      style={{ height: `${imageHeight}px`, width: `${imageWidth}px` }}\r\n    >\r\n      {rebCombinations.map(color =>\r\n        <div\r\n          key={color}\r\n          style={{\r\n            backgroundColor: `rgba(${color[0]}, ${color[1]}, ${color[2]})`,\r\n            height: \"1px\",\r\n            width: \"1px\",\r\n            float: \"right\",\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RenderUniquePixels;","export function uniqueCombinations(height, width) {\r\n    let rgbUniqueCombination = [];\r\n\r\n    for (let blue = 1; blue <= 255; blue += 8) {\r\n      for (let green = 1; green <= 255; green += 8) {\r\n        for (let red = 1; red <= 255 ; red += 8) {\r\n          rgbUniqueCombination.push([red, green, blue]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return rgbUniqueCombination;\r\n}","import './App.css';\nimport RenderUniquePixels from './Components/renderUniquePixels';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RenderUniquePixels imageWidth={256} imageHeight={128} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}